import asyncio
import random
import logging
from logging.handlers import RotatingFileHandler
import datetime
import time
import sys

import discord
from discord.ext import commands
from discord.utils import get

import loadconfig
from loadconfig import __blacklist__, __whitelist__

__version__ = '1.2.1'

logging.basicConfig(level=logging.INFO)
logger = logging.getLogger('discord')
logger.setLevel(logging.DEBUG)
#logger.setLevel(logging.WARNING)
handler = RotatingFileHandler(filename='discordbot.log', maxBytes=1024*100, backupCount=2, encoding='utf-8', mode='w')
handler.setFormatter(logging.Formatter('%(asctime)s:%(levelname)s:%(name)s: %(message)s'))
logger.addHandler(handler)

extensions = ['cogs.bmain', 'cogs.wow', 'cogs.test', 'cogs.encounters', 'cogs.errors_feedback', 'cogs.voice', 'cogs.other']

description = "Talking Pineapple Project is a Bot for Discord Voice Chat. It can recognise user's voice commands and use text-to-speech by itself. Soon..."

bot = commands.Bot(command_prefix=';', description=description)

bot.remove_command('help')

async def _randomGame():
    while True:
        guildCount = len(bot.guilds)
        memberCount = len(list(bot.get_all_members()))
        randomGame = random.choice(loadconfig.__games__)
        await bot.change_presence(activity=discord.Activity(type=randomGame[0], name=randomGame[1].format(guilds = guildCount, members = memberCount)))
        await asyncio.sleep(loadconfig.__gamesTimer__)

@bot.event
async def on_ready():
    if bot.user.id == 449543738486816769:
        bot.dev = True
    else:
        bot.dev = False
    print('Logged in as')
    print(f'Bot-Name: {bot.user.name}')
    print(f'Bot-ID: {bot.user.id}')
    print(f'Dev Mode: {bot.dev}')
    print(f'Discord Version: {discord.__version__}')
    print(f'Bot Version: {__version__}')
    print('-----------')
    for cog in extensions:
        try:
            bot.load_extension(cog)
        except Exception:
            print(f'Couldn\'t load cog {cog}')
#    while not discord.opus.is_loaded():
#        discord.opus.load_opus(find_library("libopus"))
    bot.startTime = datetime.datetime.now()
    bot.startDate = time.ctime()
    bot.botVersion = __version__
    bot.userAgentHeaders = {'User-Agent': f'ubuntu:talking-pineapple:v{__version__}'}
    bot.gamesLoop = asyncio.ensure_future(_randomGame())
    
@bot.event
async def on_message(message):
    if message.author.bot:
        return
    if message.author.id in __blacklist__:
        return
#    if message.author.id in huglist:
#        await message.add_reaction('ü§ó')
    if isinstance(message.channel, discord.DMChannel):
        await message.author.send('–ü—Ä–æ—Å—Ç–∏—Ç–µ, —è –ø–æ–∫–∞ –Ω–µ –æ—á–µ–Ω—å —É–º–Ω—ã–π, –ø–æ—ç—Ç–æ–º—É –º–æ–≥—É –æ—Ç–≤–µ—á–∞—Ç—å —Ç–æ–ª—å–∫–æ –≤ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö –∫–∞–Ω–∞–ª–∞—Ö! –ù–∞ —Å–∞–º–æ–º –¥–µ–ª–µ —ç—Ç–æ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ –æ–±—É—Å–ª–æ–≤–ª–µ–Ω–Ω–æ —Ç–µ—Å—Ç–æ–≤—ã–º–∏ —Å–æ–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏! :hugging: ')
        return
    if bot.user.mentioned_in(message) and message.mention_everyone is False:
        if '–ø—Ä–∏–≤–µ—Ç' in message.content.lower():
            await message.channel.send('–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ!')
        else:
            await message.channel.send('–ü—Ä–æ—Å—Ç–∏—Ç–µ, –Ω–µ –ø–æ–Ω–∏–º–∞—é –í–∞—Å! –í—ã –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∫–æ–º–Ω–∞–¥—ã **;info** –∏ **;help**, —á—Ç–æ–±—ã –±–æ–ª—å—à–µ —É–∑–Ω–∞—Ç—å –æ–±–æ –º–Ω–µ –∏ –º–æ–∏—Ö –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—è—Ö! :hugging:')
#    if '–º–æ–ª–æ–¥' in message.content.lower():
#        await message.add_reaction('ü§ó')
#    if '—Å–ø–∞—Å' in message.content.lower():
#        await message.add_reaction('üçç')
#    if '—Ç–æ–∫—Å' in message.content.lower():
#        await message.add_reaction('üçÜ')
    else:
        await bot.process_commands(message)
           
@bot.command()
async def info(ctx):
    embed = discord.Embed(title='–î–∞-–¥–∞, —è üçç', description='''–ë–æ—Ç –¥–ª—è –¥–∏—Å–∫–æ—Ä–¥–∞, —Å–æ–∑–¥–∞–Ω–Ω—ã–π –∏—Å–∫–ª—é—á–∏—Ç–µ–ª—å–Ω–æ –≤ —Ü–µ–ª—è—Ö —Å–∞–º–æ–æ–±—É—á–µ–Ω–∏—è —á–µ–ª–æ–≤–µ–∫–æ–º –æ—á–µ–Ω—å –¥–∞–ª–µ–∫–∏–º –æ—Ç –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è.
                                                            –õ—é–±—ã–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é—Ç—Å—è. –í –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏ –ø–æ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—É.
                                                            ''', color=0xa500ff)
    embed.set_thumbnail(url="https://cdn.discordapp.com/avatars/449543738486816769/536e8a791db747e20ace0d0a3df6e070.png")
    embed.set_author(name=f'{bot.user.name}', icon_url='https://cdn.discordapp.com/avatars/449543738486816769/536e8a791db747e20ace0d0a3df6e070.png')
    embed.add_field(name="–í–µ—Ä—Å–∏—è", value=f'{__version__}')
    embed.add_field(name="–ü—Ä–µ—Ñ–∏–∫—Å", value=f'**{bot.command_prefix}**')
    embed.add_field(name="–ê–≤—Ç–æ—Ä", value="<@!440103092009304064>")
    embed.add_field(name="–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –°–µ—Ä–≤–µ—Ä–æ–≤", value=f'{len(bot.guilds)}')
    embed.add_field(name="–î–∞—Ç–∞ –∏ –≤—Ä–µ–º—è –∑–∞–ø—É—Å–∫–∞", value=f'{bot.startDate}')
    embed.add_field(name="–í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã", value=f'{(datetime.datetime.now() - bot.startTime)}')
    embed.add_field(name="–ü–∏–Ω–≥", value=f'{1000*round(bot.latency, 3)}')
    embed.add_field(name="–°–ø—Ä–∞–≤–∫–∞ –ø–æ –∫–æ–º–∞–Ω–¥–∞–º", value="**;help**")
    embed.add_field(name='changelog', value='''–ù–µ–∫–æ—Ç–æ—Ä—ã–µ –∫–æ–º–∞–Ω–¥—ã —É–¥–∞–ª–µ–Ω—ã –∑–∞ –Ω–µ–Ω–∞–¥–æ–±–Ω–æ—Å—Ç—å—é.
                                                –ö–æ–º–∞–Ω–¥—ã **;pairing –∏ ;random user** —Ç–µ–ø–µ—Ä—å –≤—ã–¥–∞—é—Ç —Ç–æ–ª—å–∫–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –æ–Ω–ª–∞–π–Ω –∏–∑ —Å–ø–∏—Å–∫–∞ –Ω–∞ –∫–∞–Ω–∞–ª–µ –≤—ã–∑–æ–≤–∞, –Ω–µ –≤—ã–¥–∞—é—Ç –ë–æ—Ç–æ–≤ (xD) –∏ **;pairing** –Ω–µ –º–æ–∂–µ—Ç –≤—ã–¥–∞—Ç—å –æ–¥–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–≤–∞–∂–¥—ã (pic).
                                                –î–æ–±–∞–≤–ª–µ–Ω –±–ª–æ–∫ –∫–æ–º–∞–Ω–¥ —Å—Ä–µ–¥–Ω–µ–π –±–µ—Å–ø–æ–ª–µ–∑–Ω–æ—Å—Ç–∏ –∏ –æ–Ω –±—É–¥–µ—Ç –ø–æ–ø–æ–ª–Ω—è—Ç—å—Å—è. **;other**
                                                –î–æ–±–∞–≤–ª–µ–Ω—ã –∫–æ–º–∞–Ω–¥—ã —Å—Ä–µ–¥–Ω–µ–π –ø–æ–ª–µ–∑–Ω–æ—Å—Ç–∏. **;wt ;wf ;wq –∏ ;wowlinks**
                                                –ú–æ–¥—É–ª—å –±–æ—Å—Å–∏–∫–æ–≤ –ø–µ—Ä–µ–¥–µ–ª–∞–Ω —Ç–∞–∫, —á—Ç–æ–±—ã –≤–º–µ—Å—Ç–æ –ø—Ä–æ—Å—Ç—ã–Ω–∏ —Ç–µ–∫—Å—Ç–∞ –≤—ã–¥–∞–≤–∞—Ç—å —Å—Å—ã–ª–∫–∏ –Ω–∞ –ø–æ–ª–µ–∑–Ω—ã–µ —Ä–µ—Å—É—Ä—Å—ã. –í —Ç–æ–º —á–∏—Å–ª–µ –∏ –Ω–∞ –≥—Ä—è–¥—É—â–∏–µ —Ä–µ–π–¥—ã(–ï—Å–ª–∏ –µ—Å—Ç—å, –∫–æ–Ω–µ—á–Ω–æ, —á—Ç–æ –≤—ã–¥–∞–≤–∞—Ç—å) 
                                                ''', inline=False)
    embed.set_image(url='https://cdn.discordapp.com/attachments/389595828567801869/512177709397573632/unknown.png')
    embed.set_footer(text="/t Adeek,Sui,Sprotae /hug")
    await ctx.send(embed=embed)

@bot.event
async def on_member_join(member):
    channel = get(member.guild.channels, name='user_count')
    await channel.send('–°–¥–∞–µ—Ç—Å—è –º–Ω–µ, —É –Ω–∞—Å –Ω–æ–≤—ã–π –¥—Ä—É–≥! Oora!') 
            
@bot.event
async def on_member_remove(member):
    channel = get(member.guild.channels, name='user_count')
    await channel.send(f'–ê–Ω–∞–Ω–∞—Å–∏–∫ –ø–æ–∫–∏–Ω—É–ª –Ω–∞—Å, –º–∏–ª–æ—Ä–¥! {member.mention} –∫—É–¥–∞ –∂–µ –í—ã!') 
    
@bot.command(hidden=True)
async def qb(ctx):
    if await ctx.bot.is_owner(ctx.author):
        await ctx.send('–°–ø–æ–∫–∏!')
        bot.logout()
        sys.exit(0)
    else:
        await ctx.send('–ù–æ –í—ã –Ω–µ –º–æ–π –ê–≤—Ç–æ—Ä!')
    

if __name__ == '__main__':
    bot.run(loadconfig.__token__)